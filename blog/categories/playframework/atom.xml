<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Playframework | Daniel Reuterwall]]></title>
  <link href="http://daniel.reuterwall.com/blog/categories/playframework/atom.xml" rel="self"/>
  <link href="http://daniel.reuterwall.com/"/>
  <updated>2013-04-18T21:56:55+02:00</updated>
  <id>http://daniel.reuterwall.com/</id>
  <author>
    <name><![CDATA[Daniel Reuterwall]]></name>
    <email><![CDATA[daniel@reuterwall.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Play with CORS]]></title>
    <link href="http://daniel.reuterwall.com/blog/2013/04/15/play-with-cors/"/>
    <updated>2013-04-15T21:26:00+02:00</updated>
    <id>http://daniel.reuterwall.com/blog/2013/04/15/play-with-cors</id>
    <content type="html"><![CDATA[<p>I few weeks ago I struggled a lot with CORS, Cross Origin Resource Sharing. It was a completely untouched field for me. What made things even more cumbersome was the different behaviors in Chrome and Firefox.</p>

<p>CORS is a way to get around the same origin policy in browsers, typically for AJAX API calls.
If you want more background you could check out the <a href="http://www.w3.org/TR/cors/">CORS specifications</a>. However, Mozilla has great and more comprehensible article on the subject, <a href="https://developer.mozilla.org/en-US/docs/HTTP/Access_control_CORS">HTTP access control (CORS)</a>.</p>

<p>Basically that server should add some HTTP headers to the response declaring accepted origins for the specific resourse.</p>

<p>With <a href="http://www.playframework.com/">Play</a>, being my server side framework of choice, this can be implemented with a real nice feature known as <a href="http://www.playframework.com/documentation/2.1.1/JavaActionsComposition">action composition</a>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>CorsAction.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">CorsAction</span> <span class="kd">extends</span> <span class="n">Action</span><span class="o">.</span><span class="na">Simple</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="n">Result</span> <span class="n">call</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Throwable</span><span class="o">{</span>
</span><span class='line'>    <span class="n">Response</span> <span class="n">response</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">response</span><span class="o">();</span>
</span><span class='line'>    <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Access-Control-Allow-Origin&quot;</span><span class="o">,</span> <span class="o">*);</span>
</span><span class='line'>    <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Access-Control-Allow-Headers&quot;</span><span class="o">,</span><span class="s">&quot;X-Requested-With&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">delegate</span><span class="o">.</span><span class="na">call</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This class will accept requests from all origins and can now be used to decorate individual actions or complete controllers using the With annotation.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>CorsController.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@With</span><span class="o">(</span><span class="n">CorsAction</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">CorsController</span> <span class="kd">extends</span> <span class="n">Controller</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">static</span> <span class="n">Result</span> <span class="n">cors</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nf">ok</span><span class="o">(</span><span class="s">&quot;Cors enabled action&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Now we can easily append necessary HTTP response headers for our CORS enabled resources.</p>

<p>All set? Well, there is still one piece of the CORS specification the we haven't touched, the preflight requests. When a cross origin request is issued, the browser could send a preceding OPTIONS request for the very same resource. The server should then respond with the accepted set of HTTP methods, origins etc for that resource.</p>

<p>Implementing this in Play is pretty straight forward. For each CORS enabled resource we need to allow a OPTIONS request in our routes file. The mapped controller methods should respond with the necessary headers to accept CORS requests.</p>

<p>If we expand our <code>CorsAction.java</code> we can use one single action for both the preflight and the regular request.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>CorsAction.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">CorsAction</span> <span class="kd">extends</span> <span class="n">Action</span><span class="o">.</span><span class="na">Simple</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="n">Result</span> <span class="n">call</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Throwable</span><span class="o">{</span>
</span><span class='line'>    <span class="n">Response</span> <span class="n">response</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">response</span><span class="o">();</span>
</span><span class='line'>    <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Access-Control-Allow-Origin&quot;</span><span class="o">,</span> <span class="o">*);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//Handle preflight requests</span>
</span><span class='line'>    <span class="k">if</span><span class="o">(</span><span class="n">context</span><span class="o">.</span><span class="na">request</span><span class="o">().</span><span class="na">method</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;OPTIONS&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Access-Control-Allow-Methods&quot;</span><span class="o">,</span> <span class="s">&quot;POST&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Access-Control-Max-Age&quot;</span><span class="o">,</span> <span class="s">&quot;3600&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Access-Control-Allow-Headers&quot;</span><span class="o">,</span> <span class="s">&quot;Origin, X-Requested-With, Content-Type, Accept&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="nf">ok</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Access-Control-Allow-Headers&quot;</span><span class="o">,</span><span class="s">&quot;X-Requested-With&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">delegate</span><span class="o">.</span><span class="na">call</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>As a final touch on this we'll add a custom action annotation <code>Cors</code>. With this annotation we'll provide a configuration possibility to specify the allowed origin instead of the default wildcard header from before. The final implementation would then look something like this:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>CorsComposition.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">java.lang.annotation.</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">play.mvc.</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">play.mvc.Http.*</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">CorsComposition</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Wraps the annotated action in an &amp;lt;code&amp;gt;CorsAction&amp;lt;/code&amp;gt;.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nd">@With</span><span class="o">(</span><span class="n">CorsAction</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
</span><span class='line'><span class="nd">@Target</span><span class="o">({</span> <span class="n">ElementType</span><span class="o">.</span><span class="na">TYPE</span><span class="o">,</span> <span class="n">ElementType</span><span class="o">.</span><span class="na">METHOD</span> <span class="o">})</span>
</span><span class='line'><span class="nd">@Retention</span><span class="o">(</span><span class="n">RetentionPolicy</span><span class="o">.</span><span class="na">RUNTIME</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="nd">@interface</span> <span class="n">Cors</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">String</span> <span class="nf">value</span><span class="o">()</span> <span class="k">default</span> <span class="s">&quot;*&quot;</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">CorsAction</span> <span class="kd">extends</span> <span class="n">Action</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">Cors</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">Result</span> <span class="nf">call</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Throwable</span><span class="o">{</span>
</span><span class='line'>        <span class="n">Response</span> <span class="n">response</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">response</span><span class="o">();</span>
</span><span class='line'>        <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Access-Control-Allow-Origin&quot;</span><span class="o">,</span><span class="n">configuration</span><span class="o">.</span><span class="na">value</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//Handle preflight requests</span>
</span><span class='line'>        <span class="k">if</span><span class="o">(</span><span class="n">context</span><span class="o">.</span><span class="na">request</span><span class="o">().</span><span class="na">method</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;OPTIONS&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Access-Control-Allow-Methods&quot;</span><span class="o">,</span> <span class="s">&quot;POST&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Access-Control-Max-Age&quot;</span><span class="o">,</span> <span class="s">&quot;3600&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Access-Control-Allow-Headers&quot;</span><span class="o">,</span> <span class="s">&quot;Origin, X-Requested-With, Content-Type, Accept&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">return</span> <span class="nf">ok</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Access-Control-Allow-Headers&quot;</span><span class="o">,</span><span class="s">&quot;X-Requested-With&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">delegate</span><span class="o">.</span><span class="na">call</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>That concludes this post, I hope it can save some headaches for some of you out there. Keep on playing!</p>

<p>Cheers</p>
]]></content>
  </entry>
  
</feed>
